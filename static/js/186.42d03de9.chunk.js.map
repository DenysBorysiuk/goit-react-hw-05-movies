{"version":3,"file":"static/js/186.42d03de9.chunk.js","mappings":"yNA4CA,UAvCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OACpBC,EAAS,mCAAG,8GAEaC,EAAAA,EAAAA,IAAgBP,EAASK,GAFtC,OAERG,EAFQ,OAGdT,EAAWS,EAAaC,SAHV,mDAKK,kBAAf,KAAMC,KALI,mDAMdC,QAAQC,IAAR,MANc,yDAAH,qDAYf,OAFAN,IAEO,WACLH,EAAWU,OACZ,CAjBmB,CAkBrB,GAAE,CAACb,KAEU,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASgB,QAAS,GACvB,wBACGhB,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EADE,OAQf,+DAEH,C,+LCxCKG,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,WAAMhB,GAAN,uFACRe,EAAAA,EAAAA,IAAA,sBAAiC,CACtDE,OAAQ,CACNC,QAASJ,GAEXd,OAAAA,IAL6B,cACzBmB,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,sDAUjBC,EAAe,mCAAG,WAAO1B,EAASK,GAAhB,uFACNe,EAAAA,EAAAA,IAAA,iBAAoBpB,GAAW,CACpDsB,OAAQ,CACNC,QAASJ,GAEXd,OAAAA,IAL2B,cACvBmB,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,wDAUfE,EAAW,mCAAG,WAAOC,EAAOvB,GAAd,uFACFe,EAAAA,EAAAA,IAAA,iBAA4B,CACjDE,OAAQ,CACNC,QAASJ,EACTS,MAAAA,GAEFvB,OAAAA,IANuB,cACnBmB,EADmB,yBAQlBA,EAASC,MARS,2CAAH,wDAWXI,EAAe,mCAAG,WAAO7B,EAASK,GAAhB,uFACNe,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,YAAuC,CAC5DsB,OAAQ,CACNC,QAASJ,GAEXd,OAAAA,IAL2B,cACvBmB,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,wDAUflB,EAAe,mCAAG,WAAOP,EAASK,GAAhB,uFACNe,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,YAAuC,CAC5DsB,OAAQ,CACNC,QAASJ,GAEXd,OAAAA,IAL2B,cACvBmB,EADuB,yBAOtBA,EAASC,MAPa,2CAAH,uD","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchData = async () => {\n      try {\n        const movieReviews = await getMovieReviews(movieId, signal);\n        setReviews(movieReviews.results);\n      } catch (error) {\n        if (error.name === 'CanceledError') return;\n        console.log(error);\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return reviews?.length > 0 ? (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <h2>Author: {author}</h2>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <p>We don`t have reviews for this movie</p>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst API_KEY = 'b60c32a6f6f2663f6a35c755ff35b4cc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const searchMovie = async (query, signal) => {\n  const response = await axios.get(`/search/movie/`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","controller","AbortController","signal","fetchData","getMovieReviews","movieReviews","results","name","console","log","abort","length","map","id","author","content","API_KEY","axios","getTrendingMovies","params","api_key","response","data","getMovieDetails","searchMovie","query","getMovieCredits"],"sourceRoot":""}