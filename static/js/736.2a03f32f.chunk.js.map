{"version":3,"file":"static/js/736.2a03f32f.chunk.js","mappings":"oRAEaA,EAAOC,EAAAA,GAAAA,GAAH,4EAMJC,EAAOD,EAAAA,GAAAA,GAAH,6LAOJE,EAAQF,EAAAA,GAAAA,IAAH,uGAOLG,EAAUH,EAAAA,GAAAA,IAAH,0DAKPI,EAAQJ,EAAAA,GAAAA,GAAH,mEAKLK,EAAWL,EAAAA,GAAAA,EAAH,4C,SCkBrB,EA5Ca,WACX,OAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAS,mCAAG,8GAEQC,EAAAA,EAAAA,IAAgBJ,GAFxB,OAERK,EAFQ,OAGdN,EAAQM,EAAQP,MAHF,gDAKdQ,QAAQC,IAAR,MALc,yDAAH,qDASfJ,GAVoB,CAWrB,GAAE,CAACH,IAGFF,IACE,SAACR,EAAD,UACGQ,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACR,UAACpB,EAAD,YACE,SAACC,EAAD,WACE,gBACEoB,IACED,EAAY,yCAC0BA,GAD1B,wDAIdE,IAAKJ,OAGT,UAAChB,EAAD,YACE,SAACC,EAAD,UAAQe,KACR,SAACd,EAAD,UAAWe,SAbJF,EADH,KAqBjB,C,+LC9CKM,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,EAAAA,IAAA,sCAAyCD,IADjC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMpB,GAAN,uFACNgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,oBAAuCe,IADjC,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfE,EAAW,mCAAG,WAAMC,GAAN,uFACFN,EAAAA,EAAAA,IAAA,iBAA4B,CACjDO,OAAQ,CACNC,QAAST,EACTO,MAAOA,KAJc,cACnBJ,EADmB,yBAOlBA,EAASC,MAPS,2CAAH,sDAUXf,EAAe,mCAAG,WAAMJ,GAAN,uFACNgB,EAAAA,EAAAA,IAAA,iBACXhB,EADW,4BACgBe,IAFV,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfM,EAAe,mCAAG,WAAMzB,GAAN,uFACNgB,EAAAA,EAAAA,IAAA,iBACXhB,EADW,4BACgBe,IAFV,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  border-radius: 5px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n  text-align: center;\n`;\n\nexport const Thumb = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n  width: 150px;\n  height: 150px;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 4px;\n  width: 142px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 12px;\n  margin-bottom: 4px;\n`;\n\nexport const SubTitle = styled.p`\n  font-size: 12px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getMovieCredits } from 'services/api';\nimport { List, Item, Thumb, Wrapper, Title, SubTitle } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchData = async () => {\n      try {\n        const credits = await getMovieCredits(movieId);\n        setCast(credits.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    cast && (\n      <List>\n        {cast.map(({ cast_id, name, character, profile_path }) => (\n          <Item key={cast_id}>\n            <Thumb>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : `https://via.placeholder.com/150x150.png?text=No+photo`\n                }\n                alt={name}\n              />\n            </Thumb>\n            <Wrapper>\n              <Title>{name}</Title>\n              <SubTitle>{character}</SubTitle>\n            </Wrapper>\n          </Item>\n        ))}\n      </List>\n    )\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.string,\n      name: PropTypes.string,\n      character: PropTypes.string,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst API_KEY = 'b60c32a6f6f2663f6a35c755ff35b4cc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(`/search/movie/`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n"],"names":["List","styled","Item","Thumb","Wrapper","Title","SubTitle","useState","cast","setCast","movieId","useParams","useEffect","fetchData","getMovieCredits","credits","console","log","map","cast_id","name","character","profile_path","src","alt","API_KEY","axios","getTrendingMovies","response","data","getMovieDetails","searchMovie","query","params","api_key","getMovieReviews"],"sourceRoot":""}