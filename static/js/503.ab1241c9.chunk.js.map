{"version":3,"file":"static/js/503.ab1241c9.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const Item = styled.li`\n  transition: transform 500ms;\n  will-change: transform;\n  cursor: pointer;\n  border-radius: 5px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Thumb = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n  width: 300px;\n  height: 450px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, Thumb } from './MovieList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, poster_path, title }) => (\n        <Item key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <Thumb>\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : `https://via.placeholder.com/300x450.png?text=${title}`\n                }\n                alt={title}\n              />\n            </Thumb>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\n\nexport const SearchBox = ({ updateQueryString }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    updateQueryString(form.elements.query.value);\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchBox.propTypes = {\n  updateQueryString: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { searchMovie } from 'services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n    const controller = new AbortController();\n    const signal = controller.signal;\n    const fetchData = async () => {\n      try {\n        const movies = await searchMovie(query, signal);\n        setMovies(movies.results);\n      } catch (error) {\n        if (error.name === 'CanceledError') return;\n        console.log(error);\n      }\n    };\n\n    fetchData();\n\n    return () => {\n      controller.abort();\n    };\n  }, [query]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <main>\n      <SearchBox updateQueryString={updateQueryString} />\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'b60c32a6f6f2663f6a35c755ff35b4cc';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async signal => {\n  const response = await axios.get(`/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, signal) => {\n  const response = await axios.get(`/movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const searchMovie = async (query, signal) => {\n  const response = await axios.get(`/search/movie/`, {\n    params: {\n      api_key: API_KEY,\n      query,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, signal) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, signal) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n    signal,\n  });\n  return response.data;\n};\n"],"names":["List","styled","Item","Thumb","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","alt","SearchBox","updateQueryString","onSubmit","e","preventDefault","form","currentTarget","elements","query","value","reset","type","name","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","controller","AbortController","signal","fetchData","searchMovie","results","console","log","abort","API_KEY","axios","getTrendingMovies","params","api_key","response","data","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}