{"version":3,"file":"static/js/736.a4cbf9bb.chunk.js","mappings":"8QAEaA,EAAOC,EAAAA,GAAAA,GAAH,4EAMJC,EAAOD,EAAAA,GAAAA,GAAH,kTAcJE,EAAQF,EAAAA,GAAAA,IAAH,uG,SCuBlB,EAvCa,WACX,OAAwBG,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAS,mCAAG,8GAEQC,EAAAA,EAAAA,IAAgBJ,GAFxB,OAERK,EAFQ,OAGdN,EAAQM,EAAQP,MAHF,gDAKdQ,QAAQC,IAAR,MALc,yDAAH,qDASfJ,GAVoB,CAWrB,GAAE,CAACH,IAGFF,IACE,UAACL,EAAD,WACGa,QAAQC,IAAIT,GACZA,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAA7B,OACR,UAACjB,EAAD,YACE,SAACC,EAAD,WACE,gBACEiB,IAAG,yCAAoCD,GACvCE,IAAKJ,OAGT,wBAAKA,KACL,uBAAIC,MARKF,EADH,MAejB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  transition: transform 500ms;\n  will-change: transform;\n  cursor: pointer;\n  border-radius: 5px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n    1px 4px 6px rgba(0, 0, 0, 0.16);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n  }\n`;\n\nexport const Thumb = styled.div`\n  border-radius: 5px;\n  overflow: hidden;\n  width: 150px;\n  height: 150px;\n`;\n","import { useState, useEffect } from 'react';\n// import { useSearchParams } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/api';\nimport { List, Item, Thumb } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchData = async () => {\n      try {\n        const credits = await getMovieCredits(movieId);\n        setCast(credits.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    cast && (\n      <List>\n        {console.log(cast)}\n        {cast.map(({ cast_id, name, character, profile_path }) => (\n          <Item key={cast_id}>\n            <Thumb>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                alt={name}\n              />\n            </Thumb>\n            <h2>{name}</h2>\n            <p>{character}</p>\n          </Item>\n        ))}\n      </List>\n    )\n  );\n};\n\nexport default Cast;\n"],"names":["List","styled","Item","Thumb","useState","cast","setCast","movieId","useParams","useEffect","fetchData","getMovieCredits","credits","console","log","map","cast_id","name","character","profile_path","src","alt"],"sourceRoot":""}